[{"C:\\Users\\amanda\\Desktop\\devinhouse\\devinhouse_sp05\\src\\index.js":"1","C:\\Users\\amanda\\Desktop\\devinhouse\\devinhouse_sp05\\src\\pages\\lista.jsx":"2","C:\\Users\\amanda\\Desktop\\devinhouse\\devinhouse_sp05\\src\\util\\constantes.js":"3","C:\\Users\\amanda\\Desktop\\devinhouse\\devinhouse_sp05\\src\\pages\\formulario.jsx":"4","C:\\Users\\amanda\\Desktop\\devinhouse\\devinhouse_sp05\\src\\pages\\principal.jsx":"5","C:\\Users\\amanda\\Desktop\\devinhouse\\devinhouse_sp05\\src\\components\\pagina.jsx":"6","C:\\Users\\amanda\\Desktop\\devinhouse\\devinhouse_sp05\\src\\components\\secao.jsx":"7","C:\\Users\\amanda\\Desktop\\devinhouse\\devinhouse_sp05\\src\\services\\aluno.js":"8","C:\\Users\\amanda\\Desktop\\devinhouse\\devinhouse_sp05\\src\\services\\constants.js":"9","C:\\Users\\amanda\\Desktop\\devinhouse\\devinhouse_sp05\\src\\services\\mirageServer.js":"10","C:\\Users\\amanda\\Desktop\\devinhouse\\devinhouse_sp05\\src\\components\\displayState.js":"11","C:\\Users\\amanda\\Desktop\\devinhouse\\devinhouse_sp05\\src\\components\\data.jsx":"12","C:\\Users\\amanda\\Desktop\\devinhouse\\devinhouse_sp05\\src\\components\\telefone.jsx":"13"},{"size":456,"mtime":1608670402446,"results":"14","hashOfConfig":"15"},{"size":2743,"mtime":1608673921380,"results":"16","hashOfConfig":"15"},{"size":1895,"mtime":1608670376107,"results":"17","hashOfConfig":"15"},{"size":10491,"mtime":1608673913227,"results":"18","hashOfConfig":"15"},{"size":2746,"mtime":1608673257451,"results":"19","hashOfConfig":"15"},{"size":306,"mtime":1608673075566,"results":"20","hashOfConfig":"15"},{"size":228,"mtime":1608590629911,"results":"21","hashOfConfig":"15"},{"size":1146,"mtime":1608670450783,"results":"22","hashOfConfig":"15"},{"size":62,"mtime":1608670272724,"results":"23","hashOfConfig":"15"},{"size":1059,"mtime":1608670429587,"results":"24","hashOfConfig":"15"},{"size":380,"mtime":1608651639434,"results":"25","hashOfConfig":"15"},{"size":200,"mtime":1608669714523,"results":"26","hashOfConfig":"15"},{"size":208,"mtime":1608669688591,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"yjdc04",{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"C:\\Users\\amanda\\Desktop\\devinhouse\\devinhouse_sp05\\src\\index.js",[],["58","59"],"C:\\Users\\amanda\\Desktop\\devinhouse\\devinhouse_sp05\\src\\pages\\lista.jsx",["60"],"import { Component } from \"react\";\r\nimport \"../assets/css/estilo.css\";\r\n// import { DisplayState } from \"../components/displayState\";\r\n\r\n// let aluno = {};\r\nexport default class ListaAlunos extends Component {\r\n  handleEditar(aluno) {\r\n    // this.aluno = aluno;\r\n    this.props.editar(aluno);\r\n  }\r\n\r\n  handleExcluir(aluno) {\r\n    this.props.excluir(aluno);\r\n  }\r\n\r\n  buscarNome = () => {\r\n    const nome = document.getElementById(\"nomeBusca\").value;\r\n    return nome;\r\n  };\r\n\r\n  render() {\r\n    const alunos = this.props.alunos;\r\n\r\n    return (\r\n      <>\r\n        <div className=\"busca-aluno\">\r\n          <span>Buscar Aluno:</span>\r\n          <input id=\"nomeBusca\" type=\"text\" placeholder=\"Insira o nome do aluno\"></input>\r\n          <button\r\n            onClick={() => {\r\n              if (document.getElementById(\"nomeBusca\").value === \"\")\r\n                alert(\"Insira o nome do aluno!\");\r\n              else this.props.buscar(this.buscarNome());\r\n            }}\r\n          >\r\n            Pesquisar\r\n          </button>\r\n          <button\r\n            onClick={() => {\r\n              document.getElementById(\"nomeBusca\").value = \"\";\r\n              this.props.buscar(\"\");\r\n            }}\r\n          >\r\n            Mostrar Todos\r\n          </button>\r\n        </div>\r\n\r\n        {(!alunos || alunos.length === 0) && <span>Nenhum aluno encontrado.</span>}\r\n\r\n        {alunos && alunos.length > 0 && (\r\n          <div className=\"lista\">\r\n            <table className=\"lista-alunos\">\r\n              <thead>\r\n                <tr>\r\n                  <th>Nome</th>\r\n                  <th>Data de Nascimento</th>\r\n                  <th>Turma</th>\r\n                  <th>Contato Para Emergências</th>\r\n                  <th>Telefone Para Emergências</th>\r\n                  <th className=\"acoes\" colSpan=\"2\">\r\n                    Ações\r\n                  </th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {alunos.map((aluno) => (\r\n                  <tr key={aluno.id}>\r\n                    <td>{aluno.nome}</td>\r\n                    <td>{aluno.dataNasc}</td>\r\n                    <td>{aluno.turma}</td>\r\n                    <td>{aluno.contEmerg}</td>\r\n                    <td>{aluno.telEmerg}</td>\r\n                    <td>\r\n                      <button onClick={() => this.handleEditar(aluno)}>Editar</button>\r\n                    </td>\r\n                    <td>\r\n                      <button onClick={() => this.handleExcluir(aluno)}>Excluir</button>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n            {/* {this.aluno && <DisplayState {...this.aluno} />} */}\r\n          </div>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n","C:\\Users\\amanda\\Desktop\\devinhouse\\devinhouse_sp05\\src\\util\\constantes.js",[],"C:\\Users\\amanda\\Desktop\\devinhouse\\devinhouse_sp05\\src\\pages\\formulario.jsx",["61","62"],"import { Component } from \"react\";\r\nimport { Formik, Form, Field, FieldArray } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { turmas, grausParentesco } from \"../util/constantes\";\r\nimport { Data } from \"../components/data\";\r\nimport { Telefone } from \"../components/telefone\";\r\nimport \"../assets/css/estilo.css\";\r\n// import { DisplayState } from \"../components/displayState\";\r\n\r\nconst INITIAL_VALUES = {\r\n  // aluno: {\r\n  nome: \"\",\r\n  dataNasc: \"\",\r\n  nomeResp: \"\",\r\n  telResp: \"\",\r\n  contEmerg: \"\",\r\n  telEmerg: \"\",\r\n  restAlim: false,\r\n  descRestAlim: \"\",\r\n  usoImg: false,\r\n  turma: \"\",\r\n  podeBuscar: [],\r\n  obsAdic: \"\",\r\n  // },\r\n};\r\n\r\nconst INITIAL_STATE = {\r\n  nomeParente: \"\",\r\n  parentesco: grausParentesco[0],\r\n};\r\n\r\nconst dataRegex = /^([0-9]{2})[/]([0-9]{2})[/]([0-9]{4})$/; // dd/mm/aaaa\r\nconst telRegex = /^\\(([0-9]{2})\\)[ ]([9]?[0-9]{4})[-]([0-9]{4})$/; // (00) [9]0000-0000\r\n\r\nconst AlunoSchema = yup.object().shape({\r\n  nome: yup.string().required(\"Preencha o nome do aluno.\"),\r\n  // dataNasc: yup\r\n  //   .string()\r\n  //   .required(\"Preencha a data de nascimento.\")\r\n  //   .matches(dataRegex, \"Formato esperado: dd/mm/aaaa.\"),\r\n  // nomeResp: yup.string().required(\"Preencha o nome do responsável.\"),\r\n  // contEmerg: yup.string().required(\"Preencha o nome do contato para emergências.\"),\r\n  // telResp: yup\r\n  //   .string()\r\n  //   .required(\"Preencha o telefone do responsável.\")\r\n  //   .matches(telRegex, \"Formato esperado: (00) 0000-0000 ou (00) 90000-0000\"),\r\n  // telEmerg: yup\r\n  //   .string()\r\n  //   .required(\"Preencha o telefone para emergências.\")\r\n  //   .matches(telRegex, \"Formato esperado: (00) 0000-0000 ou (00) 90000-0000\"),\r\n  // restAlim: yup.boolean(),\r\n  // descRestAlim: yup.string().when(\"restAlim\", {\r\n  //   is: true,\r\n  //   then: yup.string().required(\"Prencha as restrições alimentares.\"),\r\n  // }),\r\n  // podeBuscar: yup\r\n  //   .array()\r\n  //   .min(1, \"Adicione ao menos uma pessoa autorizada a buscar o aluno.\"),\r\n  // obsAdic: yup.string(),\r\n});\r\n\r\nclass FormularioCadastro extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = INITIAL_STATE;\r\n  }\r\n\r\n  adicionarAluno = (values, actions) => {\r\n    this.props.adicionar(values);\r\n    actions.resetForm();\r\n  };\r\n\r\n  alterarParente = (target, setFieldValue) => {\r\n    this.setState({ [target.name]: target.value });\r\n    setFieldValue(target.name, target.value);\r\n  };\r\n\r\n  adicionarParente = (values, arrayHelpers) => {\r\n    arrayHelpers.push(this.state);\r\n\r\n    values.nomeParente = undefined;\r\n    values.parentesco = undefined;\r\n\r\n    this.setState({\r\n      nomeParente: \"\",\r\n      parentesco: grausParentesco[0],\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Formik\r\n        enableReinitialize\r\n        validadeOnMount={true}\r\n        validationSchema={AlunoSchema}\r\n        initialValues={INITIAL_STATE && (this.props.alunoEmEdicao || INITIAL_VALUES)}\r\n        onSubmit={(values, actions) => this.adicionarAluno(values, actions)}\r\n        render={({ values, errors, touched, setFieldValue }) => (\r\n          <Form>\r\n            <div className=\"formulario\">\r\n              <div className=\"campo-formulario\">\r\n                <label>Nome do Aluno:</label>\r\n                <Field className=\"input-formulario\" name=\"nome\" type=\"text\" />\r\n                {touched.nome && errors.nome && (\r\n                  <span className=\"erro-campo-formulario\">{errors.nome}</span>\r\n                )}\r\n              </div>\r\n\r\n              <div className=\"campo-formulario\">\r\n                <label>Data de Nascimento:</label>\r\n                <Data className=\"input-formulario\" name=\"dataNasc\" />\r\n                {touched.dataNasc && errors.dataNasc && (\r\n                  <span className=\"erro-campo-formulario\">{errors.dataNasc}</span>\r\n                )}\r\n              </div>\r\n\r\n              <div className=\"campo-formulario\">\r\n                <label>Nome do Responsável:</label>\r\n                <Field className=\"input-formulario\" name=\"nomeResp\" type=\"text\" />\r\n                {touched.nomeResp && errors.nomeResp && (\r\n                  <span className=\"erro-campo-formulario\">{errors.nomeResp}</span>\r\n                )}\r\n              </div>\r\n\r\n              <div className=\"campo-formulario\">\r\n                <label>Telefone do Responsável:</label>\r\n                <Telefone className=\"input-formulario\" name=\"telResp\" />\r\n                {touched.telResp && errors.telResp && (\r\n                  <span className=\"erro-campo-formulario\">{errors.telResp}</span>\r\n                )}\r\n              </div>\r\n\r\n              <div className=\"campo-formulario\">\r\n                <label>Em caso de emergência avisar:</label>\r\n                <Field className=\"input-formulario\" name=\"contEmerg\" type=\"text\" />\r\n                {touched.contEmerg && errors.contEmerg && (\r\n                  <span className=\"erro-campo-formulario\">{errors.contEmerg}</span>\r\n                )}\r\n              </div>\r\n\r\n              <div className=\"campo-formulario\">\r\n                <label>Telefone para emergências:</label>\r\n                <Telefone className=\"input-formulario\" name=\"telEmerg\" />\r\n                {touched.telEmerg && errors.telEmerg && (\r\n                  <span className=\"erro-campo-formulario\">{errors.telEmerg}</span>\r\n                )}\r\n              </div>\r\n\r\n              <div className=\"campo-formulario\">\r\n                <label htmlFor=\"restAlim\">Possui restrições alimentares?</label>\r\n                <Field className=\"input-formulario\" name=\"restAlim\" type=\"checkbox\" />\r\n                <br />\r\n                {values.restAlim && (\r\n                  <>\r\n                    <Field\r\n                      className=\"input-formulario\"\r\n                      name=\"descRestAlim\"\r\n                      placeholder=\"Insira aqui as restrições alimentares\"\r\n                      as=\"textarea\"\r\n                    />\r\n                    {touched.descRestAlim && errors.descRestAlim && (\r\n                      <span className=\"erro-campo-formulario\">{errors.descRestAlim}</span>\r\n                    )}\r\n                  </>\r\n                )}\r\n              </div>\r\n\r\n              <div className=\"campo-formulario\">\r\n                <label htmlFor=\"usoImg\">Autoriza uso de imagem?</label>\r\n                <Field className=\"input-formulario\" name=\"usoImg\" type=\"checkbox\" />\r\n              </div>\r\n\r\n              <div className=\"campo-formulario\">\r\n                <label>Turma:</label>\r\n                <Field className=\"input-formulario\" name=\"turma\" as=\"select\">\r\n                  {turmas.map((turma) => (\r\n                    <option key={turma} value={turma}>\r\n                      {turma}\r\n                    </option>\r\n                  ))}\r\n                </Field>\r\n              </div>\r\n\r\n              <div className=\"campo-formulario\">\r\n                <FieldArray\r\n                  name=\"podeBuscar\"\r\n                  render={(arrayHelpers) => (\r\n                    <>\r\n                      <label>Pessoas autorizadas a buscar:</label>\r\n                      <ul>\r\n                        {values.podeBuscar && values.podeBuscar.length > 0\r\n                          ? values.podeBuscar.map((parente, index) => (\r\n                              <li key={index}>\r\n                                {parente.nomeParente} ({parente.parentesco}) &nbsp;\r\n                                <button\r\n                                  type=\"button\"\r\n                                  onClick={() => arrayHelpers.remove(index)}\r\n                                >\r\n                                  Excluir\r\n                                </button>\r\n                              </li>\r\n                            ))\r\n                          : null}\r\n                      </ul>\r\n                      <div className=\"adicionar-parente\">\r\n                        <Field\r\n                          type=\"text\"\r\n                          name=\"nomeParente\"\r\n                          value={this.state.nomeParente}\r\n                          onChange={(evento) =>\r\n                            this.alterarParente(evento.target, setFieldValue)\r\n                          }\r\n                        />\r\n                        <Field\r\n                          as=\"select\"\r\n                          name=\"parentesco\"\r\n                          value={this.state.parentesco}\r\n                          onChange={(evento) =>\r\n                            this.alterarParente(evento.target, setFieldValue)\r\n                          }\r\n                        >\r\n                          {grausParentesco.map((grau) => (\r\n                            <option key={grau} value={grau}>\r\n                              {grau}\r\n                            </option>\r\n                          ))}\r\n                        </Field>\r\n                        <button\r\n                          type=\"button\"\r\n                          name=\"btnAdicionarParente\"\r\n                          onClick={() => this.adicionarParente(values, arrayHelpers)}\r\n                        >\r\n                          Adicionar\r\n                        </button>\r\n                      </div>\r\n                    </>\r\n                  )}\r\n                />\r\n                {(touched.nomeParente || touched.podeBuscar) && errors.podeBuscar && (\r\n                  <span className=\"erro-campo-formulario\">{errors.podeBuscar}</span>\r\n                )}\r\n              </div>\r\n\r\n              <div className=\"campo-formulario\">\r\n                <Field\r\n                  className=\"input-formulario\"\r\n                  name=\"obsAdic\"\r\n                  placeholder=\"Observações adicionais...\"\r\n                  as=\"textarea\"\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"botoes-formulario\">\r\n              <button className=\"botao-formulario\" type=\"submit\">\r\n                {this.props.alunoEmEdicao ? \"Salvar Alterações\" : \"Adicionar Novo Aluno\"}\r\n              </button>\r\n              <button\r\n                className=\"botao-formulario\"\r\n                type=\"reset\"\r\n                onClick={() => {\r\n                  if (this.props.alunoEmEdicao) {\r\n                    this.props.cancelar();\r\n                  }\r\n                }}\r\n              >\r\n                Cancelar\r\n              </button>\r\n            </div>\r\n            {/* <DisplayState {...values} /> */}\r\n          </Form>\r\n        )}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default FormularioCadastro;\r\n","C:\\Users\\amanda\\Desktop\\devinhouse\\devinhouse_sp05\\src\\pages\\principal.jsx",[],"C:\\Users\\amanda\\Desktop\\devinhouse\\devinhouse_sp05\\src\\components\\pagina.jsx",[],"C:\\Users\\amanda\\Desktop\\devinhouse\\devinhouse_sp05\\src\\components\\secao.jsx",[],"C:\\Users\\amanda\\Desktop\\devinhouse\\devinhouse_sp05\\src\\services\\aluno.js",[],"C:\\Users\\amanda\\Desktop\\devinhouse\\devinhouse_sp05\\src\\services\\constants.js",[],"C:\\Users\\amanda\\Desktop\\devinhouse\\devinhouse_sp05\\src\\services\\mirageServer.js",[],"C:\\Users\\amanda\\Desktop\\devinhouse\\devinhouse_sp05\\src\\components\\displayState.js",["63"],"import React from \"react\";\r\n\r\nexport const DisplayState = (values) => (\r\n  <div style={{ margin: \"1rem 0\" }}>\r\n    <h3 style={{ fontFamily: \"monospace\" }} />\r\n    <pre\r\n      style={{\r\n        background: \"#f6f8fa\",\r\n        fontSize: \"1rem\",\r\n        padding: \"1rem\",\r\n      }}\r\n    >\r\n      <strong>values</strong> = {JSON.stringify(values, null, 2)}\r\n    </pre>\r\n  </div>\r\n);\r\n","C:\\Users\\amanda\\Desktop\\devinhouse\\devinhouse_sp05\\src\\components\\data.jsx",[],"C:\\Users\\amanda\\Desktop\\devinhouse\\devinhouse_sp05\\src\\components\\telefone.jsx",[],{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":3,"column":10,"nodeType":"70","messageId":"71","endLine":3,"endColumn":22},{"ruleId":"68","severity":1,"message":"72","line":32,"column":7,"nodeType":"70","messageId":"71","endLine":32,"endColumn":16},{"ruleId":"68","severity":1,"message":"73","line":33,"column":7,"nodeType":"70","messageId":"71","endLine":33,"endColumn":15},{"ruleId":"74","severity":1,"message":"75","line":5,"column":5,"nodeType":"76","endLine":5,"endColumn":47},"no-native-reassign",["77"],"no-negated-in-lhs",["78"],"no-unused-vars","'DisplayState' is defined but never used.","Identifier","unusedVar","'dataRegex' is assigned a value but never used.","'telRegex' is assigned a value but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]